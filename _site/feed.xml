<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-20T11:20:26-07:00</updated><id>http://localhost:4000/feed.xml</id><entry><title type="html">Defining Call Stack</title><link href="http://localhost:4000/2020/04/20/defining-call-stack.html" rel="alternate" type="text/html" title="Defining Call Stack" /><published>2020-04-20T00:00:00-07:00</published><updated>2020-04-20T00:00:00-07:00</updated><id>http://localhost:4000/2020/04/20/defining-call-stack</id><content type="html" xml:base="http://localhost:4000/2020/04/20/defining-call-stack.html">&lt;h4 id=&quot;short-answer-call-stack-is-for-keeping-track-of-multiple-functions--what-is-currently-being-run-and-what-functions-are-call-for-within-that-function&quot;&gt;Short Answer: Call stack is for keeping track of multiple functions ‚Äì what is currently being run and what functions are call for within that function.&lt;/h4&gt;

&lt;p&gt;Long answer:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;When script calls a function, the function gets add to the call stack.&lt;/li&gt;
  &lt;li&gt;Any functions that get called by the previous function gets added on top of the call stack.&lt;/li&gt;
  &lt;li&gt;It starts executing the functions, after executing, the function is taken off the stack and it keeps executing through the stack.&lt;/li&gt;
  &lt;li&gt;If the stack takes more space than it had assigned to it =&amp;gt; &lt;strong&gt;Stack Overflow!&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hopefully that was informative!  üòÅ&lt;br /&gt;
-Shunshun&lt;/p&gt;</content><author><name></name></author><summary type="html">Short Answer: Call stack is for keeping track of multiple functions ‚Äì what is currently being run and what functions are call for within that function.</summary></entry><entry><title type="html">Null Object Pattern</title><link href="http://localhost:4000/2020/04/13/null-object-pattern.html" rel="alternate" type="text/html" title="Null Object Pattern" /><published>2020-04-13T00:00:00-07:00</published><updated>2020-04-13T00:00:00-07:00</updated><id>http://localhost:4000/2020/04/13/null-object-pattern</id><content type="html" xml:base="http://localhost:4000/2020/04/13/null-object-pattern.html">&lt;p&gt;I learned about the Null Object pattern while working on my portfolio website.&lt;/p&gt;

&lt;p&gt;Null Object reflects a do nothing relationship. It is implemented to replace &lt;strong&gt;if&lt;/strong&gt; check for a null value. This can be used to provide default behavior in case data is not available.&lt;/p&gt;

&lt;p&gt;This is a code example I used in my portfolio site:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;current_user&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;guest_user&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;guest_user&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;OpenStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Guest User&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;first_name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Guest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;last_name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;User&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;guest@example.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The method &lt;strong&gt;current_user&lt;/strong&gt; is the example for Null Object Pattern. It doesn‚Äôt do anything unless the &lt;strong&gt;current_user&lt;/strong&gt; doesn‚Äôt exist. This way, it‚Äôs way easier to change code later on because everything is organized and easy to find.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In conclusion&lt;/strong&gt;, making a method to do nothing other than to handle null objects is awesome because it is a more elegant way of coding. It makes it easier to find and change later on and if you set it in the parent file you could set it once and not worry about setting it in all the child files.&lt;/p&gt;

&lt;p&gt;The lazy person in me is super excited to learn this so that my code in the future will be more modular and easier to maintain and change.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Shunshun&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">I learned about the Null Object pattern while working on my portfolio website.</summary></entry><entry><title type="html">Lambda Explained</title><link href="http://localhost:4000/2020/04/10/lambda-explained.html" rel="alternate" type="text/html" title="Lambda Explained" /><published>2020-04-10T00:00:00-07:00</published><updated>2020-04-10T00:00:00-07:00</updated><id>http://localhost:4000/2020/04/10/lambda-explained</id><content type="html" xml:base="http://localhost:4000/2020/04/10/lambda-explained.html">&lt;p&gt;I had my first encounter with lambda the other day when I was coding out my portfolio project and was very intrigued by it. Not going to lie, the reason was that it has a very funny name. I decided to do some investigation to get to know it a little bit more.&lt;/p&gt;

&lt;h2 id=&quot;an-introduction-to-lambda&quot;&gt;An Introduction to Lambda&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;lambda&lt;/strong&gt; is a way to define a block and parameters with ‚Äú= -&amp;gt;‚Äù syntax.&lt;/p&gt;

&lt;p&gt;Interestingly, defining a lambda won‚Äôt run the code inside, you have to use the &lt;strong&gt;call&lt;/strong&gt; method.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;For example:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;my_lambda&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;This is a lambda&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;my_lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# &quot;This is a lambda&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;lambda-can-also-take-arguments&quot;&gt;Lambda can also take arguments:&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;divides_by_two&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;divides_by_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# 2.5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;
üòé Very cool. I just found a new way to type less üòè&lt;/p&gt;

&lt;p&gt;There are also &lt;strong&gt;yield&lt;/strong&gt; and &lt;strong&gt;proc&lt;/strong&gt; that I want to investigate more but I‚Äôll leave that for a future date for easier digestion.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;-Shunshun&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">I had my first encounter with lambda the other day when I was coding out my portfolio project and was very intrigued by it. Not going to lie, the reason was that it has a very funny name. I decided to do some investigation to get to know it a little bit more.</summary></entry><entry><title type="html">How to Survive Long Hours of Work</title><link href="http://localhost:4000/2020/04/05/how-to-survive-long-hours-of-work.html" rel="alternate" type="text/html" title="How to Survive Long Hours of Work" /><published>2020-04-05T00:00:00-07:00</published><updated>2020-04-05T00:00:00-07:00</updated><id>http://localhost:4000/2020/04/05/how-to-survive-long-hours-of-work</id><content type="html" xml:base="http://localhost:4000/2020/04/05/how-to-survive-long-hours-of-work.html">&lt;p&gt;This week, the toll of overworking finally caught up to me. I felt tired and exhausted by the end of the week. I want to micro improve my life so that I can cope with it better because coding from the time you get up till you go to sleep seems like it‚Äôs destroying my health.&lt;/p&gt;

&lt;h3 id=&quot;different-areas-of-improvement&quot;&gt;Different areas of improvement&lt;/h3&gt;

&lt;h4 id=&quot;self-care&quot;&gt;Self-care:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Be mindful while showering: take a few mindful breaths while waiting for your conditioner/hair mask to work their ‚Äúmagic‚Äù&lt;/li&gt;
  &lt;li&gt;Take a few minutes of break and do some jumping jacks/burpees to get your blood pumping&lt;/li&gt;
  &lt;li&gt;Get pre-prepared meal service delivered so that you can still eat nutritious meals even though you have no time to cook&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;automate-your-life&quot;&gt;Automate your life:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Get a wireless charging pad for your phone if you‚Äôre the type of person like me where you forget to plug in your phone at night&lt;/li&gt;
  &lt;li&gt;Have reminders set for things you don‚Äôt want to clutter your mind with&lt;/li&gt;
  &lt;li&gt;Have a work timer so that you can take breaks promptly&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;personal-activities&quot;&gt;Personal activities:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Take day trips or half-day trips on weekends to get outside and breath fresh air&lt;/li&gt;
  &lt;li&gt;Premack principle: Anything that you want to do more can reward anything you want to do less. Take advantage that any type of break will feel like a reward while you‚Äôre working hard. I get so excited going to pick up food now while before I would think that‚Äôs a chore.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Most of us at some point in our lives have to work long hours for periods of time. This will come with an opportunity cost, but we can minimize the cost by utilizing modern tools and mindfulness. Perception is important. The stress we feel like we can cope with is much better than the stress that we feel like we can‚Äôt cope with.&lt;/p&gt;

&lt;p&gt;Hope this article about stress management can help you as much as it helped me! &lt;br /&gt;
&lt;strong&gt;-Shunshun&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">This week, the toll of overworking finally caught up to me. I felt tired and exhausted by the end of the week. I want to micro improve my life so that I can cope with it better because coding from the time you get up till you go to sleep seems like it‚Äôs destroying my health.</summary></entry><entry><title type="html">Chuck Norris Jokepedia</title><link href="http://localhost:4000/2020/03/26/my-first-command-line-project.html" rel="alternate" type="text/html" title="Chuck Norris Jokepedia" /><published>2020-03-26T00:00:00-07:00</published><updated>2020-03-26T00:00:00-07:00</updated><id>http://localhost:4000/2020/03/26/my-first-command-line-project</id><content type="html" xml:base="http://localhost:4000/2020/03/26/my-first-command-line-project.html">&lt;p&gt;Today I finally finished my first CLI project. It‚Äôs a hilarious app that gives you facts about Chuck Norris. It‚Äôs a little inappropriate/offensive sometimes but mostly it will surprise you with bursts of laughter.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/chucknorrisapp.png&quot; alt=&quot;image of the app&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I had so much fun during the process! I loved seeing the final result of my app even though it‚Äôs a simple CLI app. I tried my best to utilize different utilities to make my app look as good as possible. I used Ruby and SQLite3 as front and back end managing. Used REST Client to GET data from the Chuck Norris API. And I used ActiveRecord to manage model relationship in my database.&lt;/p&gt;

&lt;p&gt;During the process, I was typing out a lot of if-else statements because I wanted to avoid bugs that appear when users enter the wrong answer. I was like: is there a better way to do this? There‚Äôs gotta be a better way. So I googled around and sure enough, there‚Äôs a gem that solved my problem and more. I used this gem &lt;a href=&quot;https://github.com/piotrmurach/tty-prompt&quot;&gt;TTY::Prompt&lt;/a&gt; to ask questions in order to make the experience more seamless. It offers select and select_multiple so that the user doesn‚Äôt even have to type their answers out. It‚Äôs a great gem for building out a CLI app. You can also use it to customize your colors and mask passwords. It solved a lot of problems I would‚Äôve had a hard time going around later on.&lt;/p&gt;

&lt;p&gt;I also got stuck on the ActiveRecord model relationships. It was a very complicated relationship. I eventually got it working after changing multiple times how my models connect. Now I can say with confidence that I understand how the basics of these ActiveRecord relationships work.&lt;/p&gt;

&lt;p&gt;Furthermore, I learned how to make a demo video of my app using QuickTime and Spark Video which is a pretty cool thing in itself.&lt;/p&gt;

&lt;p&gt;This is my demo video:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/tSXT3-0okXE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;I am very excited about making more apps of my own! Hopefully, this was fun to read and watch :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Shunshun&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ShunshunL/Chuck-Norris-Jokepedia&quot;&gt;Link to Chuck Norris Jokipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Today I finally finished my first CLI project. It‚Äôs a hilarious app that gives you facts about Chuck Norris. It‚Äôs a little inappropriate/offensive sometimes but mostly it will surprise you with bursts of laughter.</summary></entry><entry><title type="html">Variable Scope in Ruby</title><link href="http://localhost:4000/2020/03/24/variable-scope-in-ruby.html" rel="alternate" type="text/html" title="Variable Scope in Ruby" /><published>2020-03-24T00:00:00-07:00</published><updated>2020-03-24T00:00:00-07:00</updated><id>http://localhost:4000/2020/03/24/variable-scope-in-ruby</id><content type="html" xml:base="http://localhost:4000/2020/03/24/variable-scope-in-ruby.html">&lt;p&gt;I had this question in my head today when I was coding up my first CLI application: What variable do I need based on the scope needed?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The narrowest the better. Right?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But what are some examples that would make this theory more actionable?&lt;/p&gt;

&lt;h3 id=&quot;local-variable-scope&quot;&gt;Local Variable Scope&lt;/h3&gt;

&lt;p&gt;This have the narrowest scope:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;money&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; 
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#This will return 80&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Local variable&lt;/strong&gt; basically means it won‚Äôt look at outside the method. When the method finishes executing, you won‚Äôt be able to access the variables inside anymore.&lt;/p&gt;

&lt;h3 id=&quot;instance-variable-scope&quot;&gt;Instance Variable Scope&lt;/h3&gt;

&lt;p&gt;This have a wider scope:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Money&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;more_money&lt;/span&gt; 
    &lt;span class=&quot;vi&quot;&gt;@quantity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; 

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;less_money&lt;/span&gt; 
    &lt;span class=&quot;vi&quot;&gt;@quantity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, &lt;code class=&quot;highlighter-rouge&quot;&gt;@quantity&lt;/code&gt; is shared between both methods.&lt;/p&gt;

&lt;p&gt;Essentially, &lt;code class=&quot;highlighter-rouge&quot;&gt;@quantity&lt;/code&gt; is only living in this class.&lt;/p&gt;

&lt;h3 id=&quot;block-scope&quot;&gt;Block Scope&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Local variables created in the blocks are not avaliable outside them.&lt;/li&gt;
  &lt;li&gt;Variables created outside the blocks can be accessed and overridden within the blocks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think I understood more about scopes after writing this blog. It solidified some of my disconnected knowledge pieces. Everything seems pretty intuitive now. Hope that was useful to you as well.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;-Shunshun&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">I had this question in my head today when I was coding up my first CLI application: What variable do I need based on the scope needed?</summary></entry><entry><title type="html">How to Escape Git Merge Message</title><link href="http://localhost:4000/2020/03/20/how-to-escape-git-merge-message.html" rel="alternate" type="text/html" title="How to Escape Git Merge Message" /><published>2020-03-20T00:00:00-07:00</published><updated>2020-03-20T00:00:00-07:00</updated><id>http://localhost:4000/2020/03/20/how-to-escape-git-merge-message</id><content type="html" xml:base="http://localhost:4000/2020/03/20/how-to-escape-git-merge-message.html">&lt;p&gt;I got stuck in the terminal today and was forced to restart it because when I tried to merge my latest changes Git told me I need to pull my master branch down. And when I did, this happened:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/merge_message.png&quot; alt=&quot;image of the terminal&quot; /&gt;
I had never seen this before and I tried to type q/quit/enter. None of them worked. I turned to my good friend Google and googled around for a bit. And I realized it‚Äôs a process to escape this state. Here‚Äôs what I found:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you want to enter your own merge message you need to follow these two steps before the next:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Press ‚Äòi‚Äô on your keyboard&lt;/li&gt;
  &lt;li&gt;Write your merge message&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;If you want to skip the merge message or you are finished writing your own merge message:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Press ‚Äòesc‚Äô (escape)&lt;/li&gt;
  &lt;li&gt;Write ‚Äú:wq‚Äù&lt;/li&gt;
  &lt;li&gt;Then hit ‚Äòenter‚Äô&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Hope that was informative and help solved your issue! :)&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;-Shunshun&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">I got stuck in the terminal today and was forced to restart it because when I tried to merge my latest changes Git told me I need to pull my master branch down. And when I did, this happened:</summary></entry><entry><title type="html">Welcome to My Blog</title><link href="http://localhost:4000/2020/03/20/first-blog-post.html" rel="alternate" type="text/html" title="Welcome to My Blog" /><published>2020-03-20T00:00:00-07:00</published><updated>2020-03-20T00:00:00-07:00</updated><id>http://localhost:4000/2020/03/20/first-blog-post</id><content type="html" xml:base="http://localhost:4000/2020/03/20/first-blog-post.html">&lt;p&gt;Hi! I‚Äôm Shunshun. This is my blog that I just created. I made it with Jekyll and GitHub Pages. And it was really fun! I think the main reason I‚Äôm writing this blog would be because I want to solidify my learning and maybe people could find it helpful to their journey through software developing too. I‚Äôm going to write each blog post of mine with a specific topic related to what I had learned that day/week. This way, everything will be organized and easy to find.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading my first post!&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;-Shunshun&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Hi! I‚Äôm Shunshun. This is my blog that I just created. I made it with Jekyll and GitHub Pages. And it was really fun! I think the main reason I‚Äôm writing this blog would be because I want to solidify my learning and maybe people could find it helpful to their journey through software developing too. I‚Äôm going to write each blog post of mine with a specific topic related to what I had learned that day/week. This way, everything will be organized and easy to find.</summary></entry></feed>